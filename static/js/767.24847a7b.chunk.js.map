{"version":3,"file":"static/js/767.24847a7b.chunk.js","mappings":"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","sources":["webpack://project-5/./src/components/nav/profile/profileInfo/profileInfo.module.css?e189","components/nav/profile/profileInfo/profileInfo.jsx","webpack://project-5/./src/components/nav/profile/profileTop/profileStatus.module.css?76d3","components/nav/profile/profileTop/profileStatus.jsx","webpack://project-5/./src/components/nav/profile/profileTop/profileTop.module.css?f0bf","components/nav/profile/profileTop/ProfileDataForm.jsx","components/nav/profile/profileTop/profileTop.jsx","webpack://project-5/./src/components/nav/profile/myPosts/post/post.module.css?7207","components/nav/profile/myPosts/post/post.jsx","webpack://project-5/./src/components/nav/profile/myPosts/myPosts.module.css?13b6","components/nav/profile/myPosts/myPosts.jsx","webpack://project-5/./src/components/nav/profile/profileCreate/profileCreate.module.css?22cd","components/nav/profile/profileCreate/profileCreate.jsx","components/nav/profile/profileCreate/profileCreateContainer.jsx","webpack://project-5/./src/components/nav/profile/profile.module.css?5f56","components/nav/profile/profile.jsx","components/nav/profile/profileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"profileInfo_profileInfo__GURHd\"};","import React from \"react\";\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\n\r\nimport classes from \"./profileInfo.module.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n     if (!props.profile) {\r\n         return <Preloader />\r\n     }\r\n\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n            <div>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { ProfileInfo }","// extracted by mini-css-extract-plugin\nexport default {\"statusDiv\":\"profileStatus_statusDiv__B4U2l\"};","import React from \"react\";\r\nimport classes from \"./profileStatus.module.css\"\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        // this.setState({ editMode: !this.state.editMode })\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.statusDiv}>\r\n                {!this.state.editMode &&\r\n                    <span onDoubleClick={this.activateEditMode}> {this.props.status || \"------------\"}</span>\r\n                }\r\n                {this.state.editMode &&\r\n                    <input onChange={this.onStatusChange} onFocus={true}  onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","// extracted by mini-css-extract-plugin\nexport default {\"profile__top\":\"profileTop_profile__top__inixu\",\"profile__block1\":\"profileTop_profile__block1__SbkGh\",\"profile__mainPhoto\":\"profileTop_profile__mainPhoto__0-Ebl\",\"profile__block2\":\"profileTop_profile__block2__tUAQe\",\"profile__fullName\":\"profileTop_profile__fullName__SRt9d\"};","import React from \"react\";\r\nimport { CreateField, Input, Textarea } from \"../../../common/formsControl/formsControl\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return  <form onSubmit={handleSubmit}>\r\n\r\n        <div><button>save</button></div>\r\n\r\n        {error && <div >\r\n            {error}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>Full name</b>: {CreateField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {CreateField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {CreateField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {CreateField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} >\r\n                    <b>{key}: {CreateField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form> \r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./profileStatus\";\r\nimport classes from \"./profileTop.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileTop = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.profile__top}>\r\n            <div className={classes.profile__block1}>\r\n                <img alt=\"profile\" src={\"https://vjoy.cc/wp-content/uploads/2019/07/1-1.jpg\"} user/>\r\n            </div>\r\n            <div className={classes.profile__block2}>\r\n                <div>\r\n                    <div>\r\n                        <img src={profile.photos.large || userPhoto} />\r\n                    </div>\r\n                    <div>\r\n                        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.profile__fullName}>{profile.fullName}</div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        <p>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</p>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <p>My professional skills: {profile.lookingForAJobDescription}</p>\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport { ProfileTop }","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"post_post__2TDM3\"};","import React from 'react'\r\nimport classes from './post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img alt=\"avatar\" src=\"https://static.thenounproject.com/png/3319451-200.png\"></img>\r\n            <div>{props.message}</div>\r\n            <div>{props.likesCount}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Post }","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"myPosts_myPosts__DvZFu\"};","import React from \"react\";\r\nimport { Post } from \"./post/post\";\r\n\r\nimport classes from \"./myPosts.module.css\"\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postElements = props.postsPage.postsData\r\n        .reverse()\r\n        .map(post => <Post key={post.id} likesCount={post.likesCount} message={post.message} ></Post>)\r\n\r\n    return (\r\n        <div className={classes.myPosts}>\r\n            <h3>My Posts</h3>\r\n            {postElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { MyPosts }","// extracted by mini-css-extract-plugin\nexport default {\"profileCreate\":\"profileCreate_profileCreate__eZur-\",\"newPostBlock\":\"profileCreate_newPostBlock__aBeNh\",\"textarea\":\"profileCreate_textarea__v2KxV\",\"mediaButtons\":\"profileCreate_mediaButtons__OwA3C\"};","import React from \"react\";\r\nimport { MyPosts } from \"../myPosts/myPosts\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classes from \"./profileCreate.module.css\";\r\nimport { required, maxLengthCreator } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../common/formsControl/formsControl\";\r\n\r\nconst ProfileCreate = React.memo(props => {\r\n\r\n    console.log(\"flkajdgsd\")\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileCreate}>\r\n\r\n            <div className={classes.newPostBlock}>\r\n                <AddPostFormRedux onSubmit={addNewPost} />\r\n\r\n                <div className={classes.mediaButtons}>\r\n                    add media buttons\r\n                </div>\r\n            </div>\r\n\r\n            <MyPosts postsPage={props.postsPage}></MyPosts>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button className={classes.newPostButton}>Add New Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({ form: 'profileAddPostForm' })(AddPostForm);\r\n\r\nexport { ProfileCreate }","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostCreator } from \"../../../../redux/profile-reducer\";\r\nimport { ProfileCreate } from \"./profileCreate\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsPage: state.postsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        addPost : (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst ProfileCreateContainer = connect(mapStateToProps, mapDispatchToProps)(ProfileCreate)\r\n\r\nexport { ProfileCreateContainer };","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile_profile__80bGc\"};","import React from \"react\";\r\n// import { MyPosts } from \"./myPosts/myPosts\"\r\nimport { ProfileInfo } from \"./profileInfo/profileInfo\";\r\nimport { ProfileTop } from \"./profileTop/profileTop\";\r\nimport { ProfileCreateContainer } from \"./profileCreate/profileCreateContainer\";\r\nimport classes from \"./profile.module.css\"\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileTop\r\n                profile={props.profile}\r\n                user={props.user}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto} \r\n                saveProfile={props.saveProfile}\r\n                />\r\n                \r\n            <ProfileInfo />\r\n\r\n            <ProfileCreateContainer store={props.store} />\r\n\r\n            {/* <MyPosts\r\n                store={props.store.getState().postsPage.postsData}\r\n            ></MyPosts> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from \"../../../redux/profile-reducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.navigate('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.router.params.userId}\r\n                profile={this.props.profile}\r\n                user={this.props.user}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Profile);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.postsPage.profile,\r\n    user: state.postsPage.user,\r\n    status: state.postsPage.status,\r\n\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nfunction withRouter(Profile) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Profile\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport const withNavigate = (Component) => {\r\n    let RedirectTo = (props) => {\r\n        return < Component {...props} navigate={useNavigate()} />\r\n    }\r\n    return RedirectTo;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withNavigate\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(withRouter(ProfileContainer));\r\n"],"names":["ProfileInfo","props","profile","className","classes","ProfileStatus","state","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","onFocus","onBlur","React","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileTop","isOwner","savePhoto","saveProfile","useState","setEditMode","alt","src","user","photos","large","userPhoto","target","files","length","fullName","initialValues","formData","then","ProfileData","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","Post","message","likesCount","MyPosts","postElements","postsPage","postsData","reverse","post","id","ProfileCreate","console","log","AddPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","name","component","validate","required","ProfileCreateContainer","connect","dispatch","addPostCreator","store","ProfileContainer","refreshProfile","userId","router","params","authorizedUserId","navigate","getUserProfile","getStatus","snapshot","withNavigate","Component","useNavigate","compose","auth","isAuth","Profile","location","useLocation","useParams"],"sourceRoot":""}