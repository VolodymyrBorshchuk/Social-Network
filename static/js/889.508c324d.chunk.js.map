{"version":3,"file":"static/js/889.508c324d.chunk.js","mappings":"sKACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAyG,0B,UCAzG,EAAyB,2BAAzB,EAA6D,2B,SCIvDA,EAAa,SAACC,GAChB,OACI,iBAAKC,UAAWC,EAAiB,IAAMA,EAAe,WAClD,SAAC,KAAO,CAACC,GAAIH,EAAMI,GAAG,UACd,gBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMI,QAEzC,SAAC,KAAO,CAACD,GAAIH,EAAMI,GAAG,SAAEJ,EAAMQ,SAG1C,ECbA,EAA0B,6BCGpBC,EAAU,SAACT,GACb,OACI,0BACI,gBAAKC,UAAWC,EAAgB,SAAEF,EAAMU,WAGpD,E,iDC+BMC,GAAcC,EAAAA,EAAAA,GAAiB,IAe/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,EAbL,SAACd,GACpB,OACI,kBAAMgB,SAAUhB,EAAMiB,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,SAAU,CAACC,EAAAA,EAAUT,GAAcH,KAAK,iBAAiBa,UAAWC,EAAAA,QAE/E,0BACI,iDAIhB,IAIA,EAhDgB,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,YACdC,EAAiBF,EAAMG,UAAUC,KAAI,SAAAC,GAAI,OAAI,SAAC7B,EAAU,CAAeS,KAAMoB,EAAKpB,KAAMJ,GAAIwB,EAAKxB,GAAIE,KAAMsB,EAAKtB,MAAlDsB,EAAKxB,GAAgE,IACnIyB,EAAmBN,EAAMO,aAAaH,KAAI,SAAAI,GAAG,OAAI,SAACtB,EAAO,CAAcL,GAAI2B,EAAI3B,GAAIM,QAASqB,EAAIrB,SAAjCqB,EAAI3B,GAAiD,IAOxH,OAAKJ,EAAMgC,QAGP,iBAAK/B,UAAWC,EAAgB,WAC5B,gBAAKD,UAAWC,EAAoB,SAC/BuB,KAGL,4BACI,gBAAKxB,UAAWC,EAAiB,SAC5B2B,KAGL,SAAChB,EAAmB,CAACG,SAjBb,SAACiB,GACjBjC,EAAMkC,YAAYD,EAAOE,eAC7B,WAE0B,SAAC,KAAQ,CAAChC,GAAG,UAiB3C,E,oEClCIiC,EAA6B,SAACb,GAAK,MAAM,CACzCS,OAAQT,EAAMc,KAAKL,OACtB,ECgBD,GAAeM,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,GAChC,EAER,KDZgC,SAACO,GAAe,IAEtCC,EAAiB,qGAKlB,OALkB,8BACnB,WACI,OAAKC,KAAK5C,MAAMgC,QAET,SAACU,GAAS,UAAKE,KAAK5C,SAFI,SAAC,KAAQ,CAACG,GAAG,UAGhD,KAAC,EALkB,CAAS0C,EAAAA,WAWhC,OAFqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,EAG7E,GCAA,CAGEG,E","sources":["webpack://project-5/./src/components/nav/messages/dialogs.module.css?84f9","webpack://project-5/./src/components/nav/messages/dialogItem/dialogItem.module.css?d179","components/nav/messages/dialogItem/dialogItem.jsx","webpack://project-5/./src/components/nav/messages/messageItem/messageItem.module.css?2771","components/nav/messages/messageItem/messageItem.jsx","components/nav/messages/dialogs.jsx","hoc/withAuthRedirect.js","components/nav/messages/dialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__-kL9K\",\"dialogItems\":\"dialogs_dialogItems__VuTpw\",\"messages\":\"dialogs_messages__Yj60m\"};","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"dialogItem_active__QWwx9\",\"dialog\":\"dialogItem_dialog__MvO86\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./dialogItem.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={props.id}>\r\n                    <img src={props.icon} alt={props.id} />\r\n            </NavLink>\r\n            <NavLink to={props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { DialogItem }","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"messageItem_message__J6eix\"};","import React from \"react\";\r\n\r\nimport classes from \"./messageItem.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Message }","import React from \"react\"\r\nimport classes from \"./dialogs.module.css\";\r\nimport { DialogItem } from \"./dialogItem/dialogItem\";\r\nimport { Message } from \"./messageItem/messageItem\";\r\nimport { TextAreaMessage } from \"../messages/textAreaMessage/textAreaMessage\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { TextArea } from \"../../common/formsControl/formsControl\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n    let dialogElements = state.usersData.map(user => <DialogItem key={user.id} name={user.name} id={user.id} icon={user.icon}></DialogItem>)\r\n    let messagesElements = state.messagesData.map(mes => <Message key={mes.id} id={mes.id} message={mes.message} ></Message>)\r\n\r\n\r\n    let addNewMessage = (values) =>{\r\n        props.sendMessage(values.newMessageText)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n\r\n            <div>\r\n                <div className={classes.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength30]} name=\"newMessageText\" component={TextArea} />\r\n            </div>\r\n            <div>\r\n                <button>Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogSendMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from \"react\"\r\nimport Dialogs from \"./dialogs\"\r\nimport { sendMessageCreator } from \"../../../redux/dialogs-reducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)"],"names":["DialogItem","props","className","classes","to","id","src","icon","alt","name","Message","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","TextArea","state","dialogsPage","dialogElements","usersData","map","user","messagesElements","messagesData","mes","isAuth","values","sendMessage","newMessageText","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}